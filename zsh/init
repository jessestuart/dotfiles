#!/usr/bin/env zsh

ZSH=$HOME/.zsh
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# 1) Load the path file(s).
for file in ${(M)config_files:#*/path.zsh}; do . $file; done

source $ZSH/prompt/config.zsh

# 2) Initialize antibody, a lightweight, git-based "plugin" manager.
source <(antibody init)
antibody bundle < "$ZSH/antibody.conf"
source "$ZSH/antibody/config.zsh"

# completion; use cache if updated within 24h
autoload -Uz compinit
if [[ -n $HOME/.zcompdump(#qN.mh+24) ]]; then
  compinit -d $HOME/.zcompdump
else
  compinit -C
fi;
# # Hack to make zsh load more quickly by not regenerating completion data
# # on every shell init.
# # autoload -Uz compinit
# autoload -Uz compinit
# re_initialize=0
# for match in $zcompdump*(.Nmh+24); do
#   re_initialize=1
#   break
# done
# if [ "$re_initialize" -eq "0" ]; then
#   echo "reinit"
#   compinit
#   # Update the timestamp on compdump file.
#   compdump
# else
#   # Omit the check for new functions once we've updated today.
#   compinit -C
# fi

test -e $ZSH/utils/tinylogger.zsh && . $ZSH/utils/tinylogger.zsh

ulimit -n 8192

# 3) Load everything else. Order is important here for autocompletion to work.
for file in ${${config_files:#*/path.zsh}:#**/completions.zsh}; do
  . $file;
done

for file in ${(M)config_files:#**/completions.zsh}; do
  . $file
done

if (( ! ${fpath[(I)/usr/local/share/zsh-completions]} )); then
  FPATH=/usr/local/share/zsh-completions:$FPATH
fi
# fpath=$(echo $fpath | sed -e 's/\s/\n/g' | sort | uniq | xargs echo)

source $fpath

unset config_files

# Finally, cleanup $PATH to remove duplicates & whitespace.
export PATH=$(echo "$PATH" | awk -v RS=':' -v ORS=":" '!a[$1]++')
export PATH=$(echo "$PATH" | tr -d '\n' | sed -e 's/:$//' -e 's/::/:/g' -e 's/ /\\ /g')
